
#ifndef UGDK_UTIL_GDD_CACHEDLOADER_TH_
#define UGDK_UTIL_GDD_CACHEDLOADER_TH_

#include <ugdk/util/gdd/abstractloader.h>
#include <map>
#include <string>

namespace ugdk {

namespace gdd {

template <class T>
class CachedLoader : public AbstractLoader<T> {

  public:

    ~CachedLoader();

    T* Load(std::string gddfile_path);

    void ClearCache();

  protected:

    struct Data {
        T* ref_;
        ~Data() { delete ref_; }
    };

    typedef std::map<std::string, Data> DataMap;

    CachedLoader() {}

  private:

    std::map<std::string, T*> cache_;

};

} /* namespace gdd */

} /* namespace ugdk */
#endif /* UGDK_UTIL_GDD_CACHEDLOADER_TH_ */
