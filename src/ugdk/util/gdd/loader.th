#ifndef UGDK_UTIL_GDD_LOADER_TH_
#define UGDK_UTIL_GDD_LOADER_TH_

#include <string>

namespace ugdk {
namespace gdd {

template <class T>
class DescriptionProtocol;

template <class T>
class Loader {
  public:
    Loader(DescriptionProtocol<T> *protocol)
        : protocol_(protocol), loaded_data_(NULL) {
            protocol_->set_loader(this);
        }

    ~Loader() {}

    T* Load(const std::string& gddfile_path);

    void newData(T* new_data) { loaded_data_ = new_data; }

    T*& data() { return loaded_data_; }

    void cleanData() { loaded_data_ = NULL; }

  private:
    T* loaded_data_;
    DescriptionProtocol<T> *protocol_;

};

} /* namespace gdd */
} /* namespace ugdk */

#endif /* UGDK_UTIL_GDD_LOADER_TH_ */
