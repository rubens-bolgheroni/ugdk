
#ifndef UGDK_UTIL_GDD_SIMPLELOADER_TH_
#define UGDK_UTIL_GDD_SIMPLELOADER_TH_

#include <ugdk/util/gdd/abstractloader.h>
#include <string>

namespace ugdk {

namespace gdd {

template <class T>
class SimpleLoader : public AbstractLoader<T> {

  public:

    ~SimpleLoader() {}

    T* Load(std::string gddfile_path);

  protected:

    SimpleLoader(LoaderProtocol<T> *protocol) : AbstractLoader<T>(protocol), loaded_data_(NULL) {}

    T* loaded_data_;

    LoaderProtocol<T>*& protocol() const;

    void newData(T* new_data) { loaded_data_ = new_data; }

    T*& data() { return loaded_data_; }

    void cleanData() { loaded_data_ = NULL; }

};

} /* namespace gdd */

} /* namespace ugdk */

#endif /* UGDK_UTIL_GDD_SIMPLELOADER_TH_ */
